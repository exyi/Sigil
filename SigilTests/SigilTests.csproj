<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{53266E21-FEBB-4155-9937-75B909134D5E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SigilTests</RootNamespace>
    <AssemblyName>SigilTests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="Add.cs" />
    <Compile Include="Add.NonGeneric.cs">
      <DependentUpon>Add.cs</DependentUpon>
    </Compile>
    <Compile Include="Arglist.cs" />
    <Compile Include="Arglist.NonGeneric.cs">
      <DependentUpon>Arglist.cs</DependentUpon>
    </Compile>
    <Compile Include="AutoNamer.cs" />
    <Compile Include="Bitwise.cs" />
    <Compile Include="Bitwise.NonGeneric.cs">
      <DependentUpon>Bitwise.cs</DependentUpon>
    </Compile>
    <Compile Include="BlogPost.cs" />
    <Compile Include="BlogPost.NonGeneric.cs">
      <DependentUpon>BlogPost.cs</DependentUpon>
    </Compile>
    <Compile Include="Boxing.cs" />
    <Compile Include="Boxing.NonGeneric.cs">
      <DependentUpon>Boxing.cs</DependentUpon>
    </Compile>
    <Compile Include="Branches.cs" />
    <Compile Include="Branches.NonGeneric.cs">
      <DependentUpon>Branches.cs</DependentUpon>
    </Compile>
    <Compile Include="Break.cs" />
    <Compile Include="Break.NonGeneric.cs">
      <DependentUpon>Break.cs</DependentUpon>
    </Compile>
    <Compile Include="CallIndirect.cs" />
    <Compile Include="CallIndirect.NonGeneric.cs">
      <DependentUpon>CallIndirect.cs</DependentUpon>
    </Compile>
    <Compile Include="Calls.cs" />
    <Compile Include="Calls.NonGeneric.cs">
      <DependentUpon>Calls.cs</DependentUpon>
    </Compile>
    <Compile Include="CastClass.cs" />
    <Compile Include="CastClass.NonGeneric.cs">
      <DependentUpon>CastClass.cs</DependentUpon>
    </Compile>
    <Compile Include="CheckFinite.cs" />
    <Compile Include="CheckFinite.NonGeneric.cs">
      <DependentUpon>CheckFinite.cs</DependentUpon>
    </Compile>
    <Compile Include="Compares.NonGeneric.cs">
      <DependentUpon>Compares.cs</DependentUpon>
    </Compile>
    <Compile Include="Constructor.cs" />
    <Compile Include="Constructor.NonGeneric.cs">
      <DependentUpon>Constructor.cs</DependentUpon>
    </Compile>
    <Compile Include="Converts.NonGeneric.cs">
      <DependentUpon>Converts.cs</DependentUpon>
    </Compile>
    <Compile Include="Errors.NonGeneric.cs">
      <DependentUpon>Errors.cs</DependentUpon>
    </Compile>
    <Compile Include="NoVerification.cs" />
    <Compile Include="Tail.cs" />
    <Compile Include="TypeInitializer.cs" />
    <Compile Include="TypeInitializer.NonGeneric.cs">
      <DependentUpon>TypeInitializer.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadFunctionPointer.cs" />
    <Compile Include="LoadFunctionPointer.NonGeneric.cs">
      <DependentUpon>LoadFunctionPointer.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadVirtualFunctionPointer.cs" />
	<Compile Include="LoadVirtualFunctionPointer.NonGeneric.cs">
	  <DependentUpon>LoadVirtualFunctionPointer.cs</DependentUpon>
	</Compile>
    <Compile Include="WriteLine.NonGeneric.cs">
      <DependentUpon>WriteLine.cs</DependentUpon>
    </Compile>
    <Compile Include="Unbox.NonGeneric.cs">
      <DependentUpon>Unbox.cs</DependentUpon>
    </Compile>
    <Compile Include="TypedReferences.NonGeneric.cs">
      <DependentUpon>TypedReferences.cs</DependentUpon>
    </Compile>
    <Compile Include="TryCatchFinally.NonGeneric.cs">
      <DependentUpon>TryCatchFinally.cs</DependentUpon>
    </Compile>
    <Compile Include="Throw.NonGeneric.cs">
      <DependentUpon>Throw.cs</DependentUpon>
    </Compile>
    <Compile Include="Switch.NonGeneric.cs">
      <DependentUpon>Switch.cs</DependentUpon>
    </Compile>
    <Compile Include="Subtract.NonGeneric.cs">
      <DependentUpon>Subtract.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreObject.NonGeneric.cs">
      <DependentUpon>StoreObject.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreLocal.NonGeneric.cs">
      <DependentUpon>StoreLocal.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreIndirect.NonGeneric.cs">
      <DependentUpon>StoreIndirect.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreField.NonGeneric.cs">
      <DependentUpon>StoreField.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreElement.NonGeneric.cs">
      <DependentUpon>StoreElement.cs</DependentUpon>
    </Compile>
    <Compile Include="StoreArgument.NonGeneric.cs">
      <DependentUpon>StoreArgument.cs</DependentUpon>
    </Compile>
    <Compile Include="SizeOf.NonGeneric.cs">
      <DependentUpon>SizeOf.cs</DependentUpon>
    </Compile>
    <Compile Include="Shifts.NonGeneric.cs">
      <DependentUpon>Shifts.cs</DependentUpon>
    </Compile>
    <Compile Include="ReThrow.NonGeneric.cs">
      <DependentUpon>ReThrow.cs</DependentUpon>
    </Compile>
    <Compile Include="Remainder.NonGeneric.cs">
      <DependentUpon>Remainder.cs</DependentUpon>
    </Compile>
    <Compile Include="Readme.NonGeneric.cs">
      <DependentUpon>Readme.cs</DependentUpon>
    </Compile>
    <Compile Include="NewObject.NonGeneric.cs">
      <DependentUpon>NewObject.cs</DependentUpon>
    </Compile>
    <Compile Include="NewArray.NonGeneric.cs">
      <DependentUpon>NewArray.cs</DependentUpon>
    </Compile>
    <Compile Include="Negate.NonGeneric.cs">
      <DependentUpon>Negate.cs</DependentUpon>
    </Compile>
    <Compile Include="Multiply.NonGeneric.cs">
      <DependentUpon>Multiply.cs</DependentUpon>
    </Compile>
    <Compile Include="Methods.NonGeneric.cs">
      <DependentUpon>Methods.cs</DependentUpon>
    </Compile>
    <Compile Include="LocalAllocate.NonGeneric.cs">
      <DependentUpon>LocalAllocate.cs</DependentUpon>
    </Compile>
    <Compile Include="Local.NonGeneric.cs">
      <DependentUpon>Local.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadObject.NonGeneric.cs">
      <DependentUpon>LoadObject.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadLocal.NonGeneric.cs">
      <DependentUpon>LoadLocal.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadlLocalAddress.NonGeneric.cs">
      <DependentUpon>LoadlLocalAddress.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadIndirect.NonGeneric.cs">
      <DependentUpon>LoadIndirect.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadFields.NonGeneric.cs">
      <DependentUpon>LoadFields.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadFieldAddress.NonGeneric.cs">
      <DependentUpon>LoadFieldAddress.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadElementAddress.NonGeneric.cs">
      <DependentUpon>LoadElementAddress.cs</DependentUpon>
    </Compile>
    <Compile Include="CopyBlock.NonGeneric.cs">
      <DependentUpon>CopyBlock.cs</DependentUpon>
    </Compile>
    <Compile Include="CopyObject.NonGeneric.cs">
      <DependentUpon>CopyObject.cs</DependentUpon>
    </Compile>
    <Compile Include="Disassembler.cs" />
    <Compile Include="Divide.NonGeneric.cs">
      <DependentUpon>Divide.cs</DependentUpon>
    </Compile>
    <Compile Include="InitializeBlock.cs" />
    <Compile Include="Compares.cs" />
    <Compile Include="Converts.cs" />
    <Compile Include="CopyBlock.cs" />
    <Compile Include="CopyObject.cs" />
    <Compile Include="Divide.cs" />
    <Compile Include="Errors.cs" />
    <Compile Include="Init.cs" />
    <Compile Include="InitializeBlock.NonGeneric.cs">
      <DependentUpon>InitializeBlock.cs</DependentUpon>
    </Compile>
    <Compile Include="InitializeObject.cs" />
    <Compile Include="InitializeObject.NonGeneric.cs">
      <DependentUpon>InitializeObject.cs</DependentUpon>
    </Compile>
    <Compile Include="Instructions.cs" />
    <Compile Include="Internals.cs" />
    <Compile Include="IsInstance.cs" />
    <Compile Include="IsInstance.NonGeneric.cs">
      <DependentUpon>IsInstance.cs</DependentUpon>
    </Compile>
    <Compile Include="Jump.cs" />
    <Compile Include="Jump.NonGeneric.cs">
      <DependentUpon>Jump.cs</DependentUpon>
    </Compile>
    <Compile Include="Labels.cs" />
    <Compile Include="Labels.NonGeneric.cs">
      <DependentUpon>Labels.cs</DependentUpon>
    </Compile>
    <Compile Include="Leave.cs" />
    <Compile Include="Leave.NonGeneric.cs">
      <DependentUpon>Leave.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadArgumentAddress.cs" />
    <Compile Include="LoadArgumentAddress.NonGeneric.cs">
      <DependentUpon>LoadArgumentAddress.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadArguments.cs" />
    <Compile Include="LoadArguments.NonGeneric.cs">
      <DependentUpon>LoadArguments.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadConstants.NonGeneric.cs">
      <DependentUpon>LoadConstants.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadConstants.cs" />
    <Compile Include="LoadElement.cs" />
    <Compile Include="LoadElement.NonGeneric.cs">
      <DependentUpon>LoadElement.cs</DependentUpon>
    </Compile>
    <Compile Include="LoadElementAddress.cs" />
    <Compile Include="LoadFieldAddress.cs" />
    <Compile Include="LoadFields.cs" />
    <Compile Include="LoadIndirect.cs" />
    <Compile Include="LoadlLocalAddress.cs" />
    <Compile Include="LoadLocal.cs" />
    <Compile Include="LoadObject.cs" />
    <Compile Include="Local.cs" />
    <Compile Include="LocalAllocate.cs" />
    <Compile Include="Methods.cs" />
    <Compile Include="Multiply.cs" />
    <Compile Include="Negate.cs" />
    <Compile Include="NewArray.cs" />
    <Compile Include="NewObject.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Readme.cs" />
    <Compile Include="Remainder.cs" />
    <Compile Include="ReThrow.cs" />
    <Compile Include="Return.cs" />
    <Compile Include="Return.NonGeneric.cs">
      <DependentUpon>Return.cs</DependentUpon>
    </Compile>
    <Compile Include="Shifts.cs" />
    <Compile Include="SizeOf.cs" />
    <Compile Include="StoreElement.cs" />
    <Compile Include="StoreField.cs" />
    <Compile Include="StoreIndirect.cs" />
    <Compile Include="StoreLocal.cs" />
    <Compile Include="StoreObject.cs" />
    <Compile Include="Subtract.cs" />
    <Compile Include="Switch.cs" />
    <Compile Include="Throw.cs" />
    <Compile Include="TryCatchFinally.cs" />
    <Compile Include="TypedReferences.cs" />
    <Compile Include="Unbox.cs" />
    <Compile Include="Verifiability.cs" />
    <Compile Include="Volatile.cs" />
    <Compile Include="WriteLine.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="StoreArgument.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Sigil NET45\Sigil NET45.csproj">
      <Project>{cc8e294d-e06c-4420-a260-d515d89ec53a}</Project>
      <Name>Sigil NET45</Name>
    </ProjectReference>
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>